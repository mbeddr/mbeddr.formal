<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:864b7953-f3fa-48ac-aa8c-5a263225acf3(_010_features._110_checkable_assurance_demo_modelquery)" content="root">
  <persistence version="9" />
  <imports>
    <import index="py52" ref="r:14bd9e1a-63cf-4fde-816f-1d68e4acbfba(com.mbeddr.formal.safety.gsn.structure)" implicit="true" />
    <import index="cjwq" ref="r:7e1f4da1-19b3-4ceb-bcab-0237eb7a50b7(com.mbeddr.formal.safety.hara.structure)" implicit="true" />
    <import index="89jy" ref="r:b084f3b4-d6a1-4460-8222-b4a956bb5d23(com.mbeddr.formal.safety.gsn.behavior)" implicit="true" />
    <import index="zn9m" ref="498d89d2-c2e9-11e2-ad49-6cf049e62fe5/java:com.intellij.openapi.util(MPS.IDEA/)" implicit="true" />
    <import index="wyt6" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)" implicit="true" />
  </imports>
  <registry>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1154032098014" name="jetbrains.mps.baseLanguage.structure.AbstractLoopStatement" flags="nn" index="2LF5Ji">
        <child id="1154032183016" name="body" index="2LFqv$" />
      </concept>
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1145552977093" name="jetbrains.mps.baseLanguage.structure.GenericNewExpression" flags="nn" index="2ShNRf">
        <child id="1145553007750" name="creator" index="2ShVmc" />
      </concept>
      <concept id="1137021947720" name="jetbrains.mps.baseLanguage.structure.ConceptFunction" flags="in" index="2VMwT0">
        <child id="1137022507850" name="body" index="2VODD2" />
      </concept>
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="1225271177708" name="jetbrains.mps.baseLanguage.structure.StringType" flags="in" index="17QB3L" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123157" name="jetbrains.mps.baseLanguage.structure.Statement" flags="nn" index="3clFbH" />
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068580123137" name="jetbrains.mps.baseLanguage.structure.BooleanConstant" flags="nn" index="3clFbT">
        <property id="1068580123138" name="value" index="3clFbU" />
      </concept>
      <concept id="1068581242875" name="jetbrains.mps.baseLanguage.structure.PlusExpression" flags="nn" index="3cpWs3" />
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6">
        <child id="1068581517676" name="expression" index="3cqZAk" />
      </concept>
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ngI" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
        <child id="1068499141038" name="actualArgument" index="37wK5m" />
      </concept>
      <concept id="1212685548494" name="jetbrains.mps.baseLanguage.structure.ClassCreator" flags="nn" index="1pGfFk">
        <child id="1212687122400" name="typeParameter" index="1pMfVU" />
      </concept>
      <concept id="1107535904670" name="jetbrains.mps.baseLanguage.structure.ClassifierType" flags="in" index="3uibUv">
        <reference id="1107535924139" name="classifier" index="3uigEE" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="6329021646629104954" name="jetbrains.mps.baseLanguage.structure.SingleLineComment" flags="nn" index="3SKdUt">
        <child id="8356039341262087992" name="line" index="1aUNEU" />
      </concept>
    </language>
    <language id="92d2ea16-5a42-4fdf-a676-c7604efe3504" name="de.slisson.mps.richtext">
      <concept id="2557074442922380897" name="de.slisson.mps.richtext.structure.Text" flags="ng" index="19SGf9">
        <child id="2557074442922392302" name="words" index="19SJt6" />
      </concept>
      <concept id="2557074442922438156" name="de.slisson.mps.richtext.structure.Word" flags="ng" index="19SUe$">
        <property id="2557074442922438158" name="escapedValue" index="19SUeA" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1177026924588" name="jetbrains.mps.lang.smodel.structure.RefConcept_Reference" flags="nn" index="chp4Y">
        <reference id="1177026940964" name="conceptDeclaration" index="cht4Q" />
      </concept>
      <concept id="1138411891628" name="jetbrains.mps.lang.smodel.structure.SNodeOperation" flags="nn" index="eCIE_">
        <child id="1144104376918" name="parameter" index="1xVPHs" />
      </concept>
      <concept id="1179409122411" name="jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall" flags="nn" index="2qgKlT" />
      <concept id="4693937538533521280" name="jetbrains.mps.lang.smodel.structure.OfConceptOperation" flags="ng" index="v3k3i">
        <child id="4693937538533538124" name="requestedConcept" index="v3oSu" />
      </concept>
      <concept id="1145383075378" name="jetbrains.mps.lang.smodel.structure.SNodeListType" flags="in" index="2I9FWS">
        <reference id="1145383142433" name="elementConcept" index="2I9WkF" />
      </concept>
      <concept id="1171305280644" name="jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation" flags="nn" index="2Rf3mk" />
      <concept id="1145567426890" name="jetbrains.mps.lang.smodel.structure.SNodeListCreator" flags="nn" index="2T8Vx0">
        <child id="1145567471833" name="createdType" index="2T96Bj" />
      </concept>
      <concept id="1144101972840" name="jetbrains.mps.lang.smodel.structure.OperationParm_Concept" flags="ng" index="1xMEDy">
        <child id="1207343664468" name="conceptArgument" index="ri$Ld" />
      </concept>
      <concept id="1138055754698" name="jetbrains.mps.lang.smodel.structure.SNodeType" flags="in" index="3Tqbb2">
        <reference id="1138405853777" name="concept" index="ehGHo" />
      </concept>
      <concept id="1138056143562" name="jetbrains.mps.lang.smodel.structure.SLinkAccess" flags="nn" index="3TrEf2">
        <reference id="1138056516764" name="link" index="3Tt5mk" />
      </concept>
      <concept id="1138056282393" name="jetbrains.mps.lang.smodel.structure.SLinkListAccess" flags="nn" index="3Tsc0h">
        <reference id="1138056546658" name="link" index="3TtcxE" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ngI" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
    <language id="c7fb639f-be78-4307-89b0-b5959c3fa8c8" name="jetbrains.mps.lang.text">
      <concept id="155656958578482948" name="jetbrains.mps.lang.text.structure.Word" flags="nn" index="3oM_SD">
        <property id="155656958578482949" name="value" index="3oM_SC" />
      </concept>
      <concept id="2535923850359271782" name="jetbrains.mps.lang.text.structure.Line" flags="nn" index="1PaTwC">
        <child id="2535923850359271783" name="elements" index="1PaTwD" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="1176906603202" name="jetbrains.mps.baseLanguage.collections.structure.BinaryOperation" flags="nn" index="56pJg">
        <child id="1176906787974" name="rightExpression" index="576Qk" />
      </concept>
      <concept id="540871147943773365" name="jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation" flags="nn" index="25WWJ4">
        <child id="540871147943773366" name="argument" index="25WWJ7" />
      </concept>
      <concept id="1176923520476" name="jetbrains.mps.baseLanguage.collections.structure.ExcludeOperation" flags="nn" index="66VNe" />
      <concept id="1153943597977" name="jetbrains.mps.baseLanguage.collections.structure.ForEachStatement" flags="nn" index="2Gpval">
        <child id="1153944400369" name="variable" index="2Gsz3X" />
        <child id="1153944424730" name="inputSequence" index="2GsD0m" />
      </concept>
      <concept id="1153944193378" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariable" flags="nr" index="2GrKxI" />
      <concept id="1153944233411" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference" flags="nn" index="2GrUjf">
        <reference id="1153944258490" name="variable" index="2Gs0qQ" />
      </concept>
      <concept id="1160612413312" name="jetbrains.mps.baseLanguage.collections.structure.AddElementOperation" flags="nn" index="TSZUe" />
      <concept id="1165525191778" name="jetbrains.mps.baseLanguage.collections.structure.GetFirstOperation" flags="nn" index="1uHKPH" />
      <concept id="1176501494711" name="jetbrains.mps.baseLanguage.collections.structure.IsNotEmptyOperation" flags="nn" index="3GX2aA" />
    </language>
    <language id="57ecebe4-dfb8-4fef-9175-0008e04a3684" name="com.mbeddr.formal.safety.argument.modelquery">
      <concept id="612965124710890643" name="com.mbeddr.formal.safety.argument.modelquery.structure.ModelCheckConceptFunction" flags="ig" index="2eAsKr" />
      <concept id="612965124711078715" name="com.mbeddr.formal.safety.argument.modelquery.structure.ConceptFunctionParameter_node" flags="ng" index="2eAIIN" />
      <concept id="612965124711590730" name="com.mbeddr.formal.safety.argument.modelquery.structure.ModelElementWord" flags="ng" index="2eCDJ2">
        <reference id="612965124711590733" name="node" index="2eCDJ5" />
      </concept>
      <concept id="1716492013482651468" name="com.mbeddr.formal.safety.argument.modelquery.structure.ModelChecksContainer" flags="ng" index="14JTGC">
        <reference id="1716492013482686107" name="gs" index="14J0bZ" />
        <child id="1716492013482652049" name="modelChecks" index="14JSnP" />
      </concept>
      <concept id="1716492013482651471" name="com.mbeddr.formal.safety.argument.modelquery.structure.ModelCheck" flags="ng" index="14JTGF">
        <reference id="1716492013482651474" name="gseb" index="14JTGQ" />
        <child id="1716492013482699988" name="checkingClosure" index="14J5yK" />
        <child id="1716492013482700317" name="explanation" index="14J5DT" />
      </concept>
    </language>
  </registry>
  <node concept="14JTGC" id="y1G8y6a0nG">
    <property role="TrG5h" value="_100_argument_over_hazards_checks" />
    <property role="3GE5qa" value="" />
    <ref role="14J0bZ" node="1vid6hjrJjg" resolve="_100_argument_over_hazards" />
    <node concept="14JTGF" id="y1G8y6a1s9" role="14JSnP">
      <property role="TrG5h" value="Hazards have associated sub-goal" />
      <ref role="14JTGQ" node="y1G8y671jV" resolve="G01" />
      <node concept="2eAsKr" id="y1G8y6a1sa" role="14J5yK">
        <node concept="3clFbS" id="y1G8y6a1sb" role="2VODD2">
          <node concept="3cpWs8" id="y1G8y6a1sc" role="3cqZAp">
            <node concept="3cpWsn" id="y1G8y6a1sd" role="3cpWs9">
              <property role="TrG5h" value="myGoal" />
              <node concept="3Tqbb2" id="y1G8y6a1se" role="1tU5fm">
                <ref role="ehGHo" to="py52:3GRi4m$qNtH" resolve="Goal" />
              </node>
              <node concept="2eAIIN" id="y1G8y6a1sf" role="33vP2m" />
            </node>
          </node>
          <node concept="3SKdUt" id="7OA8CsRecTp" role="3cqZAp">
            <node concept="1PaTwC" id="7OA8CsRecTq" role="1aUNEU">
              <node concept="3oM_SD" id="7OA8CsRecYQ" role="1PaTwD">
                <property role="3oM_SC" value="find" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecYX" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecZ2" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecZb" role="1PaTwD">
                <property role="3oM_SC" value="list" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecZh" role="1PaTwD">
                <property role="3oM_SC" value="associated" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecZt" role="1PaTwD">
                <property role="3oM_SC" value="to" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRecZx" role="1PaTwD">
                <property role="3oM_SC" value="G01" />
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="7OA8CsRebhv" role="3cqZAp">
            <node concept="3cpWsn" id="7OA8CsRebhw" role="3cpWs9">
              <property role="TrG5h" value="hazardsList" />
              <node concept="2OqwBi" id="7OA8CsRebhx" role="33vP2m">
                <node concept="2OqwBi" id="7OA8CsRebhy" role="2Oq$k0">
                  <node concept="2OqwBi" id="7OA8CsRebhz" role="2Oq$k0">
                    <node concept="37vLTw" id="7OA8CsRebh$" role="2Oq$k0">
                      <ref role="3cqZAo" node="y1G8y6a1sd" resolve="myGoal" />
                    </node>
                    <node concept="2Rf3mk" id="7OA8CsRebh_" role="2OqNvi">
                      <node concept="1xMEDy" id="7OA8CsRebhA" role="1xVPHs">
                        <node concept="chp4Y" id="7OA8CsRebhB" role="ri$Ld">
                          <ref role="cht4Q" to="cjwq:2RlaC$P86Ok" resolve="HazardsListRefWord" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="1uHKPH" id="7OA8CsRebhC" role="2OqNvi" />
                </node>
                <node concept="3TrEf2" id="7OA8CsRebhD" role="2OqNvi">
                  <ref role="3Tt5mk" to="cjwq:2RlaC$Pcvh7" resolve="hazardsList" />
                </node>
              </node>
              <node concept="3Tqbb2" id="7OA8CsRebC9" role="1tU5fm">
                <ref role="ehGHo" to="cjwq:7TjUbLQ4gD0" resolve="IHazardsContainer" />
              </node>
            </node>
          </node>
          <node concept="3SKdUt" id="7OA8CsRed52" role="3cqZAp">
            <node concept="1PaTwC" id="7OA8CsRed53" role="1aUNEU">
              <node concept="3oM_SD" id="7OA8CsRedaA" role="1PaTwD">
                <property role="3oM_SC" value="take" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedaK" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedaP" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedaY" role="1PaTwD">
                <property role="3oM_SC" value="from" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedb4" role="1PaTwD">
                <property role="3oM_SC" value="hazard" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedbc" role="1PaTwD">
                <property role="3oM_SC" value="list" />
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="y1G8y6a1sg" role="3cqZAp">
            <node concept="3cpWsn" id="y1G8y6a1sh" role="3cpWs9">
              <property role="TrG5h" value="allHazardsFromList" />
              <node concept="2I9FWS" id="y1G8y6a1si" role="1tU5fm">
                <ref role="2I9WkF" to="cjwq:7TjUbLQ4gDb" resolve="IHazardLike" />
              </node>
              <node concept="2OqwBi" id="7OA8CsR_NJl" role="33vP2m">
                <node concept="37vLTw" id="7OA8CsRebhE" role="2Oq$k0">
                  <ref role="3cqZAo" node="7OA8CsRebhw" resolve="hazardsList" />
                </node>
                <node concept="3Tsc0h" id="7OA8CsR_OIB" role="2OqNvi">
                  <ref role="3TtcxE" to="cjwq:7TjUbLQ4gDh" resolve="hazards" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbH" id="7OA8CsRedAa" role="3cqZAp" />
          <node concept="3SKdUt" id="7OA8CsRedKY" role="3cqZAp">
            <node concept="1PaTwC" id="7OA8CsRedKZ" role="1aUNEU">
              <node concept="3oM_SD" id="7OA8CsRedQr" role="1PaTwD">
                <property role="3oM_SC" value="in" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedQu" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedQz" role="1PaTwD">
                <property role="3oM_SC" value="following" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedQI" role="1PaTwD">
                <property role="3oM_SC" value="lines" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedQR" role="1PaTwD">
                <property role="3oM_SC" value="we" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedQV" role="1PaTwD">
                <property role="3oM_SC" value="iterate" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedR4" role="1PaTwD">
                <property role="3oM_SC" value="over" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRa" role="1PaTwD">
                <property role="3oM_SC" value="sub-goals" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRl" role="1PaTwD">
                <property role="3oM_SC" value="of" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRp" role="1PaTwD">
                <property role="3oM_SC" value="G01" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRu" role="1PaTwD">
                <property role="3oM_SC" value="and" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRef0A" role="1PaTwD">
                <property role="3oM_SC" value="add" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRI" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRedRR" role="1PaTwD">
                <property role="3oM_SC" value="referenced" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRef0L" role="1PaTwD">
                <property role="3oM_SC" value="to" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRef0P" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRef0U" role="1PaTwD">
                <property role="3oM_SC" value="list" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRef12" role="1PaTwD">
                <property role="3oM_SC" value="&quot;addressedHazards&quot;" />
              </node>
            </node>
          </node>
          <node concept="3cpWs8" id="y1G8y6a1su" role="3cqZAp">
            <node concept="3cpWsn" id="y1G8y6a1sv" role="3cpWs9">
              <property role="TrG5h" value="addressedHazards" />
              <node concept="2I9FWS" id="y1G8y6a1sw" role="1tU5fm">
                <ref role="2I9WkF" to="cjwq:7TjUbLQ4gDb" resolve="IHazardLike" />
              </node>
              <node concept="2ShNRf" id="y1G8y6a1sx" role="33vP2m">
                <node concept="2T8Vx0" id="y1G8y6a1sy" role="2ShVmc">
                  <node concept="2I9FWS" id="y1G8y6a1sz" role="2T96Bj">
                    <ref role="2I9WkF" to="cjwq:7TjUbLQ4gDb" resolve="IHazardLike" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="2Gpval" id="y1G8y6a1s$" role="3cqZAp">
            <node concept="2GrKxI" id="y1G8y6a1s_" role="2Gsz3X">
              <property role="TrG5h" value="downstream" />
            </node>
            <node concept="2OqwBi" id="y1G8y6a1sA" role="2GsD0m">
              <node concept="2OqwBi" id="y1G8y6a1sB" role="2Oq$k0">
                <node concept="37vLTw" id="y1G8y6a1sC" role="2Oq$k0">
                  <ref role="3cqZAo" node="y1G8y6a1sd" resolve="myGoal" />
                </node>
                <node concept="2qgKlT" id="y1G8y6a1sD" role="2OqNvi">
                  <ref role="37wK5l" to="89jy:2E1OJq6Z1vw" resolve="getNeighbouringOutboundElements" />
                </node>
              </node>
              <node concept="v3k3i" id="y1G8y6a1sE" role="2OqNvi">
                <node concept="chp4Y" id="y1G8y6a1sF" role="v3oSu">
                  <ref role="cht4Q" to="py52:3GRi4m$qNtH" resolve="Goal" />
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="y1G8y6a1sG" role="2LFqv$">
              <node concept="3cpWs8" id="y1G8y6a1sH" role="3cqZAp">
                <node concept="3cpWsn" id="y1G8y6a1sI" role="3cpWs9">
                  <property role="TrG5h" value="hazard" />
                  <node concept="3Tqbb2" id="y1G8y6a1sJ" role="1tU5fm">
                    <ref role="ehGHo" to="cjwq:7TjUbLQ4gDb" resolve="IHazardLike" />
                  </node>
                  <node concept="2OqwBi" id="y1G8y6a1sK" role="33vP2m">
                    <node concept="2OqwBi" id="y1G8y6a1sL" role="2Oq$k0">
                      <node concept="2OqwBi" id="y1G8y6a1sM" role="2Oq$k0">
                        <node concept="2GrUjf" id="y1G8y6a1sN" role="2Oq$k0">
                          <ref role="2Gs0qQ" node="y1G8y6a1s_" resolve="downstream" />
                        </node>
                        <node concept="2Rf3mk" id="y1G8y6a1sO" role="2OqNvi">
                          <node concept="1xMEDy" id="y1G8y6a1sP" role="1xVPHs">
                            <node concept="chp4Y" id="y1G8y6a1sQ" role="ri$Ld">
                              <ref role="cht4Q" to="cjwq:2RlaC$PbkQu" resolve="HazardRefWord" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="1uHKPH" id="y1G8y6a1sR" role="2OqNvi" />
                    </node>
                    <node concept="3TrEf2" id="y1G8y6a1sS" role="2OqNvi">
                      <ref role="3Tt5mk" to="cjwq:2RlaC$PcChp" resolve="hazard" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="y1G8y6a1sT" role="3cqZAp">
                <node concept="2OqwBi" id="y1G8y6a1sU" role="3clFbG">
                  <node concept="37vLTw" id="y1G8y6a1sV" role="2Oq$k0">
                    <ref role="3cqZAo" node="y1G8y6a1sv" resolve="addressedHazards" />
                  </node>
                  <node concept="TSZUe" id="y1G8y6a1sW" role="2OqNvi">
                    <node concept="37vLTw" id="y1G8y6a1sX" role="25WWJ7">
                      <ref role="3cqZAo" node="y1G8y6a1sI" resolve="hazard" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbH" id="7OA8CsRef1w" role="3cqZAp" />
          <node concept="3SKdUt" id="7OA8CsRef6W" role="3cqZAp">
            <node concept="1PaTwC" id="7OA8CsRef6X" role="1aUNEU">
              <node concept="3oM_SD" id="7OA8CsRefcF" role="1PaTwD">
                <property role="3oM_SC" value="if" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefcM" role="1PaTwD">
                <property role="3oM_SC" value="the" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefcR" role="1PaTwD">
                <property role="3oM_SC" value="list" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefcX" role="1PaTwD">
                <property role="3oM_SC" value="of" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefd1" role="1PaTwD">
                <property role="3oM_SC" value="addressed" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefdc" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReo_M" role="1PaTwD">
                <property role="3oM_SC" value="does" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReo_U" role="1PaTwD">
                <property role="3oM_SC" value="not" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReo_Z" role="1PaTwD">
                <property role="3oM_SC" value="cover" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoA6" role="1PaTwD">
                <property role="3oM_SC" value="all" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAb" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAm" role="1PaTwD">
                <property role="3oM_SC" value="from" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAu" role="1PaTwD">
                <property role="3oM_SC" value="list," />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoA_" role="1PaTwD">
                <property role="3oM_SC" value="then" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAF" role="1PaTwD">
                <property role="3oM_SC" value="we" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAJ" role="1PaTwD">
                <property role="3oM_SC" value="have" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoAP" role="1PaTwD">
                <property role="3oM_SC" value="hazards" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoB0" role="1PaTwD">
                <property role="3oM_SC" value="which" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoB7" role="1PaTwD">
                <property role="3oM_SC" value="have" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoBd" role="1PaTwD">
                <property role="3oM_SC" value="not" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoBi" role="1PaTwD">
                <property role="3oM_SC" value="been" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoBo" role="1PaTwD">
                <property role="3oM_SC" value="addressed" />
              </node>
              <node concept="3oM_SD" id="7OA8CsReoBz" role="1PaTwD">
                <property role="3oM_SC" value="yet" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRefdl" role="1PaTwD">
                <property role="3oM_SC" value="" />
              </node>
            </node>
          </node>
          <node concept="3clFbJ" id="y1G8y6a1sY" role="3cqZAp">
            <node concept="3clFbS" id="y1G8y6a1sZ" role="3clFbx">
              <node concept="3cpWs6" id="75npNYZIR5i" role="3cqZAp">
                <node concept="2ShNRf" id="75npNYZKSVK" role="3cqZAk">
                  <node concept="1pGfFk" id="75npNYZKSVL" role="2ShVmc">
                    <ref role="37wK5l" to="zn9m:~Pair.&lt;init&gt;(java.lang.Object,java.lang.Object)" resolve="Pair" />
                    <node concept="3uibUv" id="75npNYZKSVM" role="1pMfVU">
                      <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
                    </node>
                    <node concept="17QB3L" id="75npNYZKSVN" role="1pMfVU" />
                    <node concept="3clFbT" id="75npNYZKTux" role="37wK5m" />
                    <node concept="3cpWs3" id="7OA8CsReY0T" role="37wK5m">
                      <node concept="2OqwBi" id="7OA8CsReY0U" role="3uHU7w">
                        <node concept="37vLTw" id="7OA8CsReY0V" role="2Oq$k0">
                          <ref role="3cqZAo" node="y1G8y6a1sh" resolve="allHazardsFromList" />
                        </node>
                        <node concept="66VNe" id="7OA8CsReY0W" role="2OqNvi">
                          <node concept="37vLTw" id="7OA8CsReY0X" role="576Qk">
                            <ref role="3cqZAo" node="y1G8y6a1sv" resolve="addressedHazards" />
                          </node>
                        </node>
                      </node>
                      <node concept="Xl_RD" id="7OA8CsReY0Y" role="3uHU7B">
                        <property role="Xl_RC" value="not all hazards have been addressed - " />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="7OA8CsRelYe" role="3clFbw">
              <node concept="2OqwBi" id="7OA8CsRehQK" role="2Oq$k0">
                <node concept="37vLTw" id="7OA8CsRefCh" role="2Oq$k0">
                  <ref role="3cqZAo" node="y1G8y6a1sh" resolve="allHazardsFromList" />
                </node>
                <node concept="66VNe" id="7OA8CsRelku" role="2OqNvi">
                  <node concept="37vLTw" id="7OA8CsRelo6" role="576Qk">
                    <ref role="3cqZAo" node="y1G8y6a1sv" resolve="addressedHazards" />
                  </node>
                </node>
              </node>
              <node concept="3GX2aA" id="7OA8CsReoxx" role="2OqNvi" />
            </node>
          </node>
          <node concept="3clFbH" id="7OA8CsReoBG" role="3cqZAp" />
          <node concept="3SKdUt" id="7OA8CsRepba" role="3cqZAp">
            <node concept="1PaTwC" id="7OA8CsRepbb" role="1aUNEU">
              <node concept="3oM_SD" id="7OA8CsRepft" role="1PaTwD">
                <property role="3oM_SC" value="check" />
              </node>
              <node concept="3oM_SD" id="7OA8CsRh9LT" role="1PaTwD">
                <property role="3oM_SC" value="successful" />
              </node>
            </node>
          </node>
          <node concept="3cpWs6" id="7OA8CsRh8Ov" role="3cqZAp">
            <node concept="2ShNRf" id="7OA8CsRh8Ow" role="3cqZAk">
              <node concept="1pGfFk" id="7OA8CsRh8Ox" role="2ShVmc">
                <ref role="37wK5l" to="zn9m:~Pair.&lt;init&gt;(java.lang.Object,java.lang.Object)" resolve="Pair" />
                <node concept="3uibUv" id="7OA8CsRh8Oy" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~Boolean" resolve="Boolean" />
                </node>
                <node concept="17QB3L" id="7OA8CsRh8Oz" role="1pMfVU" />
                <node concept="3clFbT" id="7OA8CsRh9_l" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
                <node concept="Xl_RD" id="7OA8CsRh8OE" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="19SGf9" id="7OA8CsRe7GU" role="14J5DT">
        <node concept="19SUe$" id="7OA8CsRe7GV" role="19SJt6">
          <property role="19SUeA" value="The referenced goal " />
        </node>
        <node concept="2eCDJ2" id="7OA8CsRe86r" role="19SJt6">
          <ref role="2eCDJ5" node="y1G8y671jV" resolve="G01" />
        </node>
        <node concept="19SUe$" id="7OA8CsRe86s" role="19SJt6">
          <property role="19SUeA" value=" claims that each hazard has been addressed&#10;with a specific sub-goal. The check below checks that each hazard from the list &#10;referenced in G01 is referenced in a sub-goal." />
        </node>
      </node>
    </node>
  </node>
</model>

